{"version":3,"sources":["components/header/header.js","components/action/action.js","components/Options/option.js","components/Options/options.js","components/addOption/addOption.js","components/optionModal/optionModal.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","subtitle","defaultProps","Action","disabled","disable","onClick","onMakeDecision","Option","count","option","e","removeChoice","Options","removeAll","options","length","map","index","Options_option","key","AddOption","state","error","undefined","whatToAdd","preventDefault","target","elements","value","trim","_this","onFormSubmit","setState","hasOptions","this","onSubmit","type","name","Component","OptionModal","lib_default","isOpen","selectedOption","onRequestClose","closeModal","contentLabel","closeTimeoutMS","App","randomNum","Math","floor","random","indexOf","concat","prevState","remove","filter","data","localStorage","getItem","JSON","parse","_unused","prevProps","json","stringify","setItem","console","log","header","action","addOption","optionModal","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e1931c21.chunk.js","sourcesContent":["import React from 'react'\n\nconst Header = (props) => (\n    <div className='header'>\n      <div className=\"container\">\n        <h1 className='header__title'>{props.title}</h1>\n        {props.subtitle && <h6 className=\"header__subtitle\">{props.subtitle}</h6>}\n      </div>\n    </div>\n  )\n\n  Header.defaultProps = {\n    title: \"Some Title\"\n  }\n\nexport default Header\n","import React from 'react'\n\n\nconst Action = (props) => (\n      <button disabled={props.disable} className=\"launch-button\" onClick={props.onMakeDecision}>What should I do?</button>\n    );\n\n\nexport default Action;\n","import React from 'react'\n\nconst Option = (props) => (\n        <div className=\"option\">\n          <p className=\"option__text\">{props.count}. {props.option}</p>\n          <button\n          className='button button--link'\n          onClick={(e) => {\n            props.removeChoice(props.option)\n          }}\n          >\n          remove\n          </button>\n        </div>\n    );\n\nexport default Option\n","import React from 'react'\n\nimport Option from './option'\n\nconst Options = (props) => (\n      <div>\n        <div className=\"widget-header\">\n          <h3 className=\"widget-header__margin\">Your Options</h3>\n          <button className=\"button button--link\" onClick={props.removeAll}>Remove All</button>\n        </div>\n        {props.options.length === 0 && <p className=\"widget-message\">Please add on option to get started</p>}\n        {props.options.map((option, index) => <Option key={option} option={option} count={index + 1} removeChoice={props.removeChoice} /> )}\n\n      </div>\n    );\n\nexport default Options\n","import React, { Component } from 'react'\n\nclass AddOption extends Component {\n  state = { error: undefined }\n\n  whatToAdd = (e) => {\n    e.preventDefault();\n    const option = e.target.elements.option.value.trim();\n    const error = this.props.onFormSubmit(option)\n    if (!error) {\n      e.target.elements.option.value = '';\n    }\n    this.setState(() => ( {error} ))\n    this.props.hasOptions();\n  }\n\n  render() {\n    return (\n      <div>\n      {this.state.error && <p className=\"add-option-error\">{this.state.error}</p>}\n        <form className=\"add-option\" onSubmit={this.whatToAdd}>\n          <input className=\"add-option__input\" type=\"text\" name=\"option\"/>\n          <button className=\"button\">Add Option</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddOption\n","import React from 'react'\nimport Modal from 'react-modal'\n\nconst OptionModal = (props) => (\n  <Modal\n    isOpen={!!props.selectedOption}\n    onRequestClose={props.closeModal}\n    contentLabel=\"Selected Option\"\n    closeTimeoutMS={200}\n    className=\"modal\"\n\n  >\n    <h3 className=\"modal__title\">Selected Options</h3>\n    { props.selectedOption && <p className=\"modal__body\">{props.selectedOption}</p>}\n    <button className=\"button\" onClick={props.closeModal}>Okay</button>\n  </Modal>\n)\n\nexport default OptionModal\n","import React, { Component } from 'react';\n\nimport Header from './components/header/header'\nimport Action from './components/action/action'\nimport Options from './components/Options/options'\nimport AddOptions from './components/addOption/addOption'\nimport OptionModal from './components/optionModal/optionModal'\n\nimport 'normalize.css/normalize.css';\nimport './styles/styles.scss';\n\n\nclass App extends Component {\n  state = {\n      title: \"Indecision App\",\n      subtitle: \"Put your life into the hands of a computer!\",\n      options: [],\n      disable: true,\n      selectedOption: undefined\n    }\n\n  componentDidMount(prevState) {\n    try {\n    const data = localStorage.getItem(\"options\")\n      if (this.state.options) {\n        this.setState(() => ({options: JSON.parse(data) }))\n        this.hasOptions()\n      }\n    } catch {\n\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.options.length !== this.state.options.length) {\n      const json = JSON.stringify(this.state.options)\n      localStorage.setItem(\"options\", json)\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"component will unmount\")\n  }\n\n  onMakeDecision = () => {\n    const randomNum = Math.floor((Math.random() * this.state.options.length));\n    const option = this.state.options[randomNum]\n    this.setState(() => ({\n      selectedOption: option\n    }))\n  }\n\n  onFormSubmit = (option) => {\n    if (!option) {\n      return \"This is not a valid option\"\n    } else if (this.state.options.indexOf(option) > -1) {\n      return `${option} already exists and cant be added again`\n    }\n\n    this.setState((prevState) => ({\n      options: prevState.options.concat(option)\n    }))\n  }\n\n  removeAll = () => {\n    this.setState(() => ({options: [] }));\n    this.hasOptions();\n  }\n\n  removeChoice = (remove) => {\n    this.setState((prevState) => ({\n        options: prevState.options.filter((option) => option !== remove)\n    }))\n    this.hasOptions()\n  }\n\n  hasOptions = () => {\n    this.setState((prevState) => {\n      if (prevState.options.length !== 0) {\n        return {\n          disable: false\n        }\n      }\n      return {\n        disable: true\n      }\n    })\n  }\n\n  closeModal = () => {\n    this.setState(() => ({selectedOption: false}))\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          title={this.state.title}\n          subtitle={this.state.subtitle}\n        />\n        <div className=\"container\">\n          <Action\n            disable={this.state.disable}\n            hasOptions={this.hasOptions}\n            onMakeDecision={this.onMakeDecision}\n          />\n          <div className=\"widget\">\n            <Options\n            options={this.state.options}\n            removeChoice={this.removeChoice}\n            removeAll={this.removeAll}\n            />\n            <AddOptions\n              onFormSubmit={this.onFormSubmit}\n              removeAll={this.removeAll}\n              hasOptions={this.hasOptions}\n            />\n          </div>\n        </div>\n        <OptionModal\n          selectedOption={this.state.selectedOption}\n          closeModal={this.closeModal}\n        />\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App'\n\n\n// const app = {\n//   title: \"Indecision App\",\n//   subtitle: \"Put your life into the hands of a computer!\",\n//   options: []\n\n// }\n\n// const onFormSubmit = (e) => {\n//   e.preventDefault();\n//   const option = e.target.elements.option.value\n//   if (option) {\n//     app.options.push(option);\n//     e.target.elements.option.value = ''\n//   }\n//   renderIndecisionApp()\n// }\n\n// const onMakeDecision = () => {\n//   const randomNum = Math.floor((Math.random() * app.options.length));\n//   const option = app.options[randomNum]\n//   alert(option);\n// }\n\n// const removeAll = () => {\n//   app.options = []\n//   renderIndecisionApp()\n// }\n\n// const renderIndecisionApp = () => {\n//   const template = (\n//     <div className='code'>\n//       <h1>{app.title}</h1>\n//       {app.subtitle && <p>{app.subtitle}</p>}\n//       <p>{app.options.length > 0 ? \"Here are your options \" : \"No Options\" }</p>\n//       <button disabled={app.options.length === 0} onClick={onMakeDecision}>What should I do?</button>\n//       <button onClick={removeAll}>Remove Options</button>\n//       <ol>\n//         {app.options.map((option) => <li key={option}>{option}</li>)}\n//       </ol>\n//       <form onSubmit={onFormSubmit}>\n//         <input type=\"text\" name='option'/>\n//         <button>Add Option</button>\n//       </form>\n//     </div>\n//   );\n//   ReactDOM.render(template, document.getElementById('root'))\n// }\n\n// renderIndecisionApp();\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n\n"],"sourceRoot":""}